note:
commented section is done by using original forula from wikipedia 
the requirment was for char based operaion so the code is left empty

#include<bits/stdc++.h>
using namespace std;

bool solve(int n){
	
	int l = to_string(n).length();
	
	int m = pow(n,2);
	string m1,m2;
	
	
}


int main(){
	int p,q;
	cin>>p>>q;
	
	for(int i=p;i<=q;i++){
		if(solve(i)){
			cout<<i<<" ";
		}
		
	}
	
}



















//bool solve(int n ){
//	int alpha = 0 , beta = 0 , m = pow(n,2);
////	cout<<"Value of m "<<m<<"\n";
//	beta = m%100;
////	cout<<"Value of beta "<<beta<<"\n";
//	alpha = ( m - beta )/ 100;
////	cout<<"Value of alpha "<<alpha<<"\n";
//	if ((alpha + beta ) == n )
//		return true;
//	else 
//		return false;	
//}
//int main(){
//	ios_base::sync_with_stdio(false);
//	cin.tie(NULL);
//	
//	int upper_bound , lower_bound ; 
//	int answer[100000],pointer=0;
//	cin>>lower_bound>>upper_bound;
//	
//	while(upper_bound > lower_bound){
////		cout<<"Value of lower_bound "<<lower_bound<<"\n";
//	if (solve(lower_bound)){
////		cout<<"Value of pointer "<<pointer<<"\n";
//		answer[pointer] = lower_bound;
//		pointer++;
//	}
//	lower_bound++;
//	}
//	if (pointer == 0 ){
//		cout<<"INVALID RANGE\n";
//		return 0 ;
//	}
//	for(int i=0;i<pointer;i++)
//		cout<<answer[i]<<" ";
//	cout<<"\n"	;
//	return 0 ;
//}
//	
